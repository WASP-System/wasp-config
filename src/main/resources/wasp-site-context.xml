<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	default-autowire="byName"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!-- import site security configuration -->
	<import resource="classpath:security-site-context.xml" />

	<!-- class for determining host to execute jobs -->
	<bean id="gridHostResolver" class="edu.yu.einstein.wasp.grid.SingleHostResolver">
		<constructor-arg name="gridWorkService" ref="waspGridWorkService" />
	</bean>

	<!-- generate link to download file -->
	<bean id="waspFileUrlResolver" class="edu.yu.einstein.wasp.grid.file.DummyFileUrlResolver">
		<constructor-arg name="url" value="http://wasp.einstein.yu.edu/" />
	</bean>
	
	<!-- 
	<bean id="waspFileUrlResolver" class="edu.yu.einstein.wasp.grid.file.LocalMappedRoundRobinFileUrlResolver">
		<constructor-arg name="hostMap">
			<map>
                <entry key="host.example.org">
                   	<list>
                   		<value>http://file1.example.org:8080/file/get/</value>
                   	</list>
                </entry>
            </map>
		</constructor-arg>
	</bean> 
	-->

	<!-- layer that handles connections, can be ssh, localhost -->
	<!--  depricated
	<bean id="gridTransportService" class="edu.yu.einstein.wasp.grid.work.SshTransportService">
		
	</bean>
	-->
	
	<!-- WORKING -->
	
	<!-- using pooled target source pattern -->

	<bean id="primaryGridTransportConnection" class="edu.yu.einstein.wasp.grid.work.SshTransportConnection" scope="prototype" lazy-init="false">
		<property name="hostName" value="${c3.settings.host}" />
		<property name="userName" value="${c3.settings.user}" />
		<property name="identityFileName" value="${c3.settings.identityfile:~/.ssh/id_rsa}" />
		<property name="softwareManager" ref="waspSoftwareManager" />
		<property name="name" value="${c3.settings.host.name}" />
		<property name="localProperties" ref="waspSiteProperties" />
		<property name="userDirIsRoot" value="${c3.settings.userDirIsRoot}" />
	</bean>

	<bean id="primaryGridTransportService" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="targetSource">
			<bean class="org.springframework.aop.target.CommonsPoolTargetSource" lazy-init="false">
				<property name="targetBeanName" value="primaryGridTransportConnection" />
				<property name="maxSize" value="${c3.settings.connectionpool.maxsize:50}" />
				<property name="maxWait" value="${c3.settings.connectionpool.maxwait:5000}" />
			</bean>
		</property>
	</bean>

	<!-- END WORKING -->

	<!-- Bean that uses transport service to wrap and execute jobs remotely. -->
	<bean id="waspGridWorkService" class="edu.yu.einstein.wasp.grid.work.SgeWorkService">
		<constructor-arg ref="primaryGridTransportService" />
		<property name="queue" value="${c3.settings.grid.queue}" />
		<property name="maxRunTime" value="${c3.settings.grid.maxruntime}" />
		<property name="account" value="${c3.settings.grid.account}" />
		<property name="project" value="${c3.settings.grid.project}" />
		<property name="mailRecipient" value="${c3.settings.grid.mailrecipient}" />
		<property name="mailCircumstances" value="${c3.settings.grid.mailcircumstances}" />	
		<property name="jobNamePrefix" value="${c3.settings.name.prefix:WASP}" />
		<property name="availableParallelEnvironments">
			<list>
				<value>${c3.settings.grid.parallelenvironment}</value>
			</list>
		</property>
		<property name="gridFileService" ref="waspGridFileService" />
	</bean>

	<!-- waspGridFileService implements basic file transfer methods -->
	<bean id="waspGridFileService" class="edu.yu.einstein.wasp.grid.file.SshFileService">
		<constructor-arg ref="primaryGridTransportService" />
		<property name="timeout" value="${wasp.file.timeout:10000}" />
		<property name="retries" value="${wasp.file.retries:6}" />
		<property name="userDirIsRoot" value="${c3.settings.userDirIsRoot}" />
	</bean>

	<!-- Configure remote work service to utilize modules for software management -->
	<bean id="waspSoftwareManager" class="edu.yu.einstein.wasp.grid.work.ModulesManager">
		<constructor-arg type="java.lang.String">
			<value>${c3.settings.host.name}</value>
		</constructor-arg>
		<constructor-arg ref="waspSiteProperties" />
	</bean>
	
	

</beans>
