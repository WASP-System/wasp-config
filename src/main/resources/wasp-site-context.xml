<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:batch="http://www.springframework.org/schema/batch" xmlns:mvc="http://www.springframework.org/schema/mvc"

	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.1.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
        http://www.springframework.org/schema/batch
        http://www.springframework.org/schema/batch/spring-batch-2.0.xsd
  http://www.springframework.org/schema/mvc
  http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
        "
	default-autowire="byName">
	
	<!-- import site security configuration -->
	<import resource="classpath:security-site-context.xml" />

	<!-- class for determining host to execute jobs -->
	<bean id="gridHostResolver" class="edu.yu.einstein.wasp.grid.SingleHostResolver">
		<constructor-arg name="gridWorkService" ref="waspGridWorkService" />
		<lookup-method name="createWorkUnit" bean="waspWorkUnit"/>
	</bean>

	<!-- layer that handles connections, can be ssh, localhost -->
	<bean id="gridTransportService" class="edu.yu.einstein.wasp.grid.work.SshTransportService">
		<property name="hostName" value="${wasp.ssh.host}" />
		<property name="userName" value="${wasp.ssh.user}" />
		<property name="identityFileName" value="${wasp.ssh.identityfile:~/.ssh/id_rsa}" />
		<property name="softwareManager" ref="waspSoftwareManager" />
		<property name="name" value="${wasp.ssh.host.name}" />
		<property name="localProperties" ref="waspSiteProperties" />
		<property name="userDirIsRoot" value="${wasp.ssh.userDirIsRoot}" />
	</bean>

	<!-- Bean that uses transport service to wrap and execute jobs remotely. -->
	<bean id="waspGridWorkService" class="edu.yu.einstein.wasp.grid.work.SgeWorkService">
		<constructor-arg ref="gridTransportService" />
		<property name="queue" value="${wasp.grid.queue}" />
		<property name="maxRunTime" value="${wasp.grid.maxruntime}" />
		<property name="account" value="${wasp.grid.account}" />
		<property name="project" value="${wasp.grid.project}" />
		<property name="mailRecipient" value="${wasp.grid.mailrecipient}" />
		<property name="mailCircumstances" value="${wasp.grid.mailcircumstances}" />	
		<property name="jobNamePrefix" value="${wasp.name.prefix}" />
		<property name="availableParallelEnvironments">
			<list>
				<value>${wasp.grid.parallelenvironment}</value>
			</list>
		</property>
		<property name="gridFileService" ref="waspGridFileService" />
	</bean>

	<!-- waspGridFileService implements basic file transfer methods -->
	<bean id="waspGridFileService" class="edu.yu.einstein.wasp.grid.file.SshFileService">
		<constructor-arg ref="gridTransportService" />
		<property name="timeout" value="${wasp.file.timeout:10000}" />
		<property name="retries" value="${wasp.file.retries:6}" />
	</bean>

	<!-- Configure remote work service to utilize modules for software management -->
	<bean id="waspSoftwareManager" class="edu.yu.einstein.wasp.grid.work.ModulesManager">
		<constructor-arg type="java.lang.String">
			<value>${wasp.ssh.host.name}</value>
		</constructor-arg>
		<constructor-arg ref="waspSiteProperties" />
	</bean>
	
	

</beans>
